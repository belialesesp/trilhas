// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trilhas.Data;

namespace Trilhas.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190506150127_trilhas-do-usuario")]
    partial class trilhasdousuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trilhas.Data.Model.Cadastro.Entidades.Entidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<string>("Descricao");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<long?>("MunicipioId");

                    b.Property<string>("Nome");

                    b.Property<long?>("TipoId");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("TipoId");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Cadastro.Entidades.Municipio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeMunicipio");

                    b.Property<string>("Uf");

                    b.Property<long>("codigoMunicipio");

                    b.Property<int>("codigoUf");

                    b.HasKey("Id");

                    b.ToTable("Municipios");

                    b.HasData(
                        new { Id = 1L, NomeMunicipio = "Vitória", Uf = "ES", codigoMunicipio = 3205309L, codigoUf = 32 },
                        new { Id = 2L, NomeMunicipio = "Vila Velha", Uf = "ES", codigoMunicipio = 3205200L, codigoUf = 32 },
                        new { Id = 3L, NomeMunicipio = "Serra", Uf = "ES", codigoMunicipio = 3205002L, codigoUf = 32 },
                        new { Id = 4L, NomeMunicipio = "Cariacica", Uf = "ES", codigoMunicipio = 3201308L, codigoUf = 32 }
                    );
                });

            modelBuilder.Entity("Trilhas.Data.Model.Cadastro.Entidades.TiposDeEntidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposDeEntidade");

                    b.HasData(
                        new { Id = 1L, Descricao = "Estadual" },
                        new { Id = 2L, Descricao = "Municipal" },
                        new { Id = 3L, Descricao = "Entidade Não Governamental" }
                    );
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Eixo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<string>("Descricao");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Eixos");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Estacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<string>("Descricao");

                    b.Property<long?>("EixoId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("EixoId");

                    b.ToTable("Estacoes");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Habilidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CursoId");

                    b.Property<string>("Descricao");

                    b.Property<long?>("SolucaoEducacionalId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("SolucaoEducacionalId");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.ItemDaTrilha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<long?>("SolucaoId");

                    b.Property<long?>("TrilhaId");

                    b.HasKey("Id");

                    b.HasIndex("SolucaoId");

                    b.HasIndex("TrilhaId");

                    b.ToTable("ItensDaTrilha");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Modulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargaHoraria");

                    b.Property<long?>("CursoId");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<long?>("SolucaoEducacionalId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("SolucaoEducacionalId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.NivelDeCurso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("NiveisDeCurso");

                    b.HasData(
                        new { Id = 1L, Descricao = "Capacitação" },
                        new { Id = 2L, Descricao = "Formação" }
                    );
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<long?>("EstacaoId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<string>("TipoDeSolucao")
                        .IsRequired();

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("EstacaoId");

                    b.ToTable("SolucoesEducacionais");

                    b.HasDiscriminator<string>("TipoDeSolucao").HasValue("SolucaoEducacional");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.TipoDeCurso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposDeCurso");

                    b.HasData(
                        new { Id = 1L, Descricao = "Presencial" },
                        new { Id = 3L, Descricao = "EaD" },
                        new { Id = 5L, Descricao = "Fórum" },
                        new { Id = 7L, Descricao = "Mesa Redonda" },
                        new { Id = 9L, Descricao = "Palestra" },
                        new { Id = 11L, Descricao = "Seminário" },
                        new { Id = 13L, Descricao = "WorkShop" }
                    );
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.TrilhaDoUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreatorUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DeletionUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LastModifierUserId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("Id");

                    b.ToTable("Trilhas");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Curso", b =>
                {
                    b.HasBaseType("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional");

                    b.Property<string>("ConteudoProgramatico");

                    b.Property<string>("Descricao");

                    b.Property<long?>("EntidadeId");

                    b.Property<int>("FrequenciaMinimaCertificado");

                    b.Property<int>("FrequenciaMinimaDeclaracao");

                    b.Property<long?>("NivelDoCursoId");

                    b.Property<bool>("PermiteCertificado");

                    b.Property<string>("PreRequisitos");

                    b.Property<string>("PublicoAlvo");

                    b.Property<string>("Sigla");

                    b.Property<long?>("TipoDoCursoId");

                    b.HasIndex("EntidadeId");

                    b.HasIndex("NivelDoCursoId");

                    b.HasIndex("TipoDoCursoId");

                    b.ToTable("Curso");

                    b.HasDiscriminator().HasValue("curso");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Livro", b =>
                {
                    b.HasBaseType("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional");

                    b.Property<string>("Autor");

                    b.Property<DateTime?>("DataPublicacao");

                    b.Property<string>("Edicao");

                    b.Property<string>("Editora");

                    b.Property<string>("OutrasInformacoes");

                    b.Property<string>("Url");

                    b.ToTable("Livro");

                    b.HasDiscriminator().HasValue("livro");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Video", b =>
                {
                    b.HasBaseType("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional");

                    b.Property<DateTime?>("DataProducao");

                    b.Property<string>("Duracao");

                    b.Property<string>("OutrasInformacoes")
                        .HasColumnName("Video_OutrasInformacoes");

                    b.Property<string>("Responsavel");

                    b.Property<string>("Url")
                        .HasColumnName("Video_Url");

                    b.ToTable("Video");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Cadastro.Entidades.Entidade", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Cadastro.Entidades.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.HasOne("Trilhas.Data.Model.Cadastro.Entidades.TiposDeEntidade", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Estacao", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.Eixo", "Eixo")
                        .WithMany()
                        .HasForeignKey("EixoId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Habilidade", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.Curso")
                        .WithMany("Habilidades")
                        .HasForeignKey("CursoId");

                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional", "SolucaoEducacional")
                        .WithMany()
                        .HasForeignKey("SolucaoEducacionalId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.ItemDaTrilha", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional", "SolucaoEducacional")
                        .WithMany()
                        .HasForeignKey("SolucaoId");

                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.TrilhaDoUsuario", "Trilha")
                        .WithMany("Itens")
                        .HasForeignKey("TrilhaId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Modulo", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.Curso")
                        .WithMany("Modulos")
                        .HasForeignKey("CursoId");

                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional", "SolucaoEducacional")
                        .WithMany()
                        .HasForeignKey("SolucaoEducacionalId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.SolucaoEducacional", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.Estacao", "Estacao")
                        .WithMany()
                        .HasForeignKey("EstacaoId");
                });

            modelBuilder.Entity("Trilhas.Data.Model.Trilhas.Entidades.Curso", b =>
                {
                    b.HasOne("Trilhas.Data.Model.Cadastro.Entidades.Entidade", "UnidadeDemandante")
                        .WithMany()
                        .HasForeignKey("EntidadeId");

                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.NivelDeCurso", "NivelDoCurso")
                        .WithMany()
                        .HasForeignKey("NivelDoCursoId");

                    b.HasOne("Trilhas.Data.Model.Trilhas.Entidades.TipoDeCurso", "TipoDoCurso")
                        .WithMany()
                        .HasForeignKey("TipoDoCursoId");
                });
#pragma warning restore 612, 618
        }
    }
}
